Terminais sem uso na gramática

   OTHER
   SEMICOLON
   LBRACE
   RBRACE
   COMMA
   NOT
   type-name


Regras inúteis no analisador por causa de conflitos

   50 selection-statement: IF LPAREN expression RPAREN statement
   51                    | IF LPAREN expression RPAREN statement ELSE statement

   52 iteration-statement: WHILE LPAREN expression RPAREN statement


Estado 0 conflitos: 7 de deslocamento/redução, 1 de redução/redução
Estado 9 conflitos: 7 de deslocamento/redução, 1 de redução/redução
Estado 27 conflitos: 8 de redução/redução
Estado 39 conflitos: 2 de deslocamento/redução
Estado 57 conflitos: 5 de deslocamento/redução
Estado 71 conflitos: 5 de deslocamento/redução
Estado 72 conflitos: 5 de deslocamento/redução
Estado 75 conflitos: 8 de redução/redução
Estado 78 conflitos: 9 de redução/redução
Estado 79 conflitos: 1 de deslocamento/redução, 9 de redução/redução
Estado 80 conflitos: 5 de deslocamento/redução
Estado 81 conflitos: 9 de redução/redução


Gramática

    0 $accept: prog $end

    1 prog: %empty
    2     | external-declaration prog

    3 external-declaration: function-definition
    4                     | declaration

    5 function-definition: declaration-specifier declarator declaration compound-statement
    6                    | compound-statement

    7 declaration: declaration-specifier init-declarator

    8 declaration-specifier: type-specifier

    9 type-specifier: INTEGER
   10               | DOUBLE

   11 init-declarator: declarator
   12                | declarator EQUAL initializer

   13 declarator: direct-declarator

   14 direct-declarator: IDENTIFIER

   15 initializer: assignment-expression

   16 assignment-expression: unary-expression assignment-operator assignment-expression
   17                      | conditional-expression

   18 unary-expression: postfix-expression

   19 postfix-expression: primary-expression
   20                   | postfix-expression DOT IDENTIFIER

   21 primary-expression: IDENTIFIER
   22                   | constant
   23                   | LPAREN expression RPAREN

   24 constant: NUM

   25 expression: assignment-expression

   26 conditional-expression: inclusive-or-expression

   27 inclusive-or-expression: and-expression
   28                        | inclusive-or-expression OR and-expression

   29 and-expression: equality-expression
   30               | and-expression AND equality-expression

   31 equality-expression: relational-expression
   32                    | equality-expression CEQ relational-expression

   33 relational-expression: additive-expression
   34                      | relational-expression CLT additive-expression
   35                      | relational-expression CGT additive-expression

   36 additive-expression: multiplicative-expression
   37                    | additive-expression PLUS multiplicative-expression
   38                    | additive-expression MINUS multiplicative-expression

   39 multiplicative-expression: unary-expression
   40                          | multiplicative-expression MUL unary-expression
   41                          | multiplicative-expression DIV unary-expression

   42 assignment-operator: EQUAL

   43 compound-statement: statement

   44 statement: expression-statement
   45          | compound-statement
   46          | selection-statement
   47          | iteration-statement

   48 expression-statement: %empty
   49                     | expression

   50 selection-statement: IF LPAREN expression RPAREN statement
   51                    | IF LPAREN expression RPAREN statement ELSE statement

   52 iteration-statement: WHILE LPAREN expression RPAREN statement


Terminais, com as regras onde eles aparecem

$end (0) 0
error (256)
NUM (258) 24
OTHER (259)
SEMICOLON (260)
IDENTIFIER (261) 14 20 21
DOUBLE (262) 10
INTEGER (263) 9
EQUAL (264) 12 42
CEQ (265) 32
CLT (266) 34
CGT (267) 35
LPAREN (268) 23 50 51 52
RPAREN (269) 23 50 51 52
LBRACE (270)
RBRACE (271)
DOT (272) 20
COMMA (273)
PLUS (274) 37
MINUS (275) 38
MUL (276) 40
DIV (277) 41
OR (278) 28
AND (279) 30
NOT (280)
WHILE (281) 52
IF (282) 50 51
ELSE (283) 51
type-name (284)


Não terminais com as regras onde eles aparecem

$accept (30)
    à esquerda: 0
prog (31)
    à esquerda: 1 2, à direita: 0 2
external-declaration (32)
    à esquerda: 3 4, à direita: 2
function-definition (33)
    à esquerda: 5 6, à direita: 3
declaration (34)
    à esquerda: 7, à direita: 4 5
declaration-specifier (35)
    à esquerda: 8, à direita: 5 7
type-specifier (36)
    à esquerda: 9 10, à direita: 8
init-declarator (37)
    à esquerda: 11 12, à direita: 7
declarator (38)
    à esquerda: 13, à direita: 5 11 12
direct-declarator (39)
    à esquerda: 14, à direita: 13
initializer (40)
    à esquerda: 15, à direita: 12
assignment-expression (41)
    à esquerda: 16 17, à direita: 15 16 25
unary-expression (42)
    à esquerda: 18, à direita: 16 39 40 41
postfix-expression (43)
    à esquerda: 19 20, à direita: 18 20
primary-expression (44)
    à esquerda: 21 22 23, à direita: 19
constant (45)
    à esquerda: 24, à direita: 22
expression (46)
    à esquerda: 25, à direita: 23 49 50 51 52
conditional-expression (47)
    à esquerda: 26, à direita: 17
inclusive-or-expression (48)
    à esquerda: 27 28, à direita: 26 28
and-expression (49)
    à esquerda: 29 30, à direita: 27 28 30
equality-expression (50)
    à esquerda: 31 32, à direita: 29 30 32
relational-expression (51)
    à esquerda: 33 34 35, à direita: 31 32 34 35
additive-expression (52)
    à esquerda: 36 37 38, à direita: 33 34 35 37 38
multiplicative-expression (53)
    à esquerda: 39 40 41, à direita: 36 37 38 40 41
assignment-operator (54)
    à esquerda: 42, à direita: 16
compound-statement (55)
    à esquerda: 43, à direita: 5 6 45
statement (56)
    à esquerda: 44 45 46 47, à direita: 43 50 51 52
expression-statement (57)
    à esquerda: 48 49, à direita: 44
selection-statement (58)
    à esquerda: 50 51, à direita: 46
iteration-statement (59)
    à esquerda: 52, à direita: 47


Estado 0

    0 $accept: . prog $end

    NUM         deslocar, e ir ao estado 1
    IDENTIFIER  deslocar, e ir ao estado 2
    DOUBLE      deslocar, e ir ao estado 3
    INTEGER     deslocar, e ir ao estado 4
    LPAREN      deslocar, e ir ao estado 5
    WHILE       deslocar, e ir ao estado 6
    IF          deslocar, e ir ao estado 7

    $end        reduzir usando a regra 1 (prog)
    $end        [reduzir usando a regra 48 (expression-statement)]
    NUM         [reduzir usando a regra 48 (expression-statement)]
    IDENTIFIER  [reduzir usando a regra 48 (expression-statement)]
    DOUBLE      [reduzir usando a regra 48 (expression-statement)]
    INTEGER     [reduzir usando a regra 48 (expression-statement)]
    LPAREN      [reduzir usando a regra 48 (expression-statement)]
    WHILE       [reduzir usando a regra 48 (expression-statement)]
    IF          [reduzir usando a regra 48 (expression-statement)]
    $padrão    reduzir usando a regra 1 (prog)

    prog                       ir ao estado 8
    external-declaration       ir ao estado 9
    function-definition        ir ao estado 10
    declaration                ir ao estado 11
    declaration-specifier      ir ao estado 12
    type-specifier             ir ao estado 13
    assignment-expression      ir ao estado 14
    unary-expression           ir ao estado 15
    postfix-expression         ir ao estado 16
    primary-expression         ir ao estado 17
    constant                   ir ao estado 18
    expression                 ir ao estado 19
    conditional-expression     ir ao estado 20
    inclusive-or-expression    ir ao estado 21
    and-expression             ir ao estado 22
    equality-expression        ir ao estado 23
    relational-expression      ir ao estado 24
    additive-expression        ir ao estado 25
    multiplicative-expression  ir ao estado 26
    compound-statement         ir ao estado 27
    statement                  ir ao estado 28
    expression-statement       ir ao estado 29
    selection-statement        ir ao estado 30
    iteration-statement        ir ao estado 31


Estado 1

   24 constant: NUM .

    $padrão  reduzir usando a regra 24 (constant)


Estado 2

   21 primary-expression: IDENTIFIER .

    $padrão  reduzir usando a regra 21 (primary-expression)


Estado 3

   10 type-specifier: DOUBLE .

    $padrão  reduzir usando a regra 10 (type-specifier)


Estado 4

    9 type-specifier: INTEGER .

    $padrão  reduzir usando a regra 9 (type-specifier)


Estado 5

   23 primary-expression: LPAREN . expression RPAREN

    NUM         deslocar, e ir ao estado 1
    IDENTIFIER  deslocar, e ir ao estado 2
    LPAREN      deslocar, e ir ao estado 5

    assignment-expression      ir ao estado 14
    unary-expression           ir ao estado 15
    postfix-expression         ir ao estado 16
    primary-expression         ir ao estado 17
    constant                   ir ao estado 18
    expression                 ir ao estado 32
    conditional-expression     ir ao estado 20
    inclusive-or-expression    ir ao estado 21
    and-expression             ir ao estado 22
    equality-expression        ir ao estado 23
    relational-expression      ir ao estado 24
    additive-expression        ir ao estado 25
    multiplicative-expression  ir ao estado 26


Estado 6

   52 iteration-statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  deslocar, e ir ao estado 33


Estado 7

   50 selection-statement: IF . LPAREN expression RPAREN statement
   51                    | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  deslocar, e ir ao estado 34


Estado 8

    0 $accept: prog . $end

    $end  deslocar, e ir ao estado 35


Estado 9

    2 prog: external-declaration . prog

    NUM         deslocar, e ir ao estado 1
    IDENTIFIER  deslocar, e ir ao estado 2
    DOUBLE      deslocar, e ir ao estado 3
    INTEGER     deslocar, e ir ao estado 4
    LPAREN      deslocar, e ir ao estado 5
    WHILE       deslocar, e ir ao estado 6
    IF          deslocar, e ir ao estado 7

    $end        reduzir usando a regra 1 (prog)
    $end        [reduzir usando a regra 48 (expression-statement)]
    NUM         [reduzir usando a regra 48 (expression-statement)]
    IDENTIFIER  [reduzir usando a regra 48 (expression-statement)]
    DOUBLE      [reduzir usando a regra 48 (expression-statement)]
    INTEGER     [reduzir usando a regra 48 (expression-statement)]
    LPAREN      [reduzir usando a regra 48 (expression-statement)]
    WHILE       [reduzir usando a regra 48 (expression-statement)]
    IF          [reduzir usando a regra 48 (expression-statement)]
    $padrão    reduzir usando a regra 1 (prog)

    prog                       ir ao estado 36
    external-declaration       ir ao estado 9
    function-definition        ir ao estado 10
    declaration                ir ao estado 11
    declaration-specifier      ir ao estado 12
    type-specifier             ir ao estado 13
    assignment-expression      ir ao estado 14
    unary-expression           ir ao estado 15
    postfix-expression         ir ao estado 16
    primary-expression         ir ao estado 17
    constant                   ir ao estado 18
    expression                 ir ao estado 19
    conditional-expression     ir ao estado 20
    inclusive-or-expression    ir ao estado 21
    and-expression             ir ao estado 22
    equality-expression        ir ao estado 23
    relational-expression      ir ao estado 24
    additive-expression        ir ao estado 25
    multiplicative-expression  ir ao estado 26
    compound-statement         ir ao estado 27
    statement                  ir ao estado 28
    expression-statement       ir ao estado 29
    selection-statement        ir ao estado 30
    iteration-statement        ir ao estado 31


Estado 10

    3 external-declaration: function-definition .

    $padrão  reduzir usando a regra 3 (external-declaration)


Estado 11

    4 external-declaration: declaration .

    $padrão  reduzir usando a regra 4 (external-declaration)


Estado 12

    5 function-definition: declaration-specifier . declarator declaration compound-statement
    7 declaration: declaration-specifier . init-declarator

    IDENTIFIER  deslocar, e ir ao estado 37

    init-declarator    ir ao estado 38
    declarator         ir ao estado 39
    direct-declarator  ir ao estado 40


Estado 13

    8 declaration-specifier: type-specifier .

    $padrão  reduzir usando a regra 8 (declaration-specifier)


Estado 14

   25 expression: assignment-expression .

    $padrão  reduzir usando a regra 25 (expression)


Estado 15

   16 assignment-expression: unary-expression . assignment-operator assignment-expression
   39 multiplicative-expression: unary-expression .

    EQUAL  deslocar, e ir ao estado 41

    $padrão  reduzir usando a regra 39 (multiplicative-expression)

    assignment-operator  ir ao estado 42


Estado 16

   18 unary-expression: postfix-expression .
   20 postfix-expression: postfix-expression . DOT IDENTIFIER

    DOT  deslocar, e ir ao estado 43

    $padrão  reduzir usando a regra 18 (unary-expression)


Estado 17

   19 postfix-expression: primary-expression .

    $padrão  reduzir usando a regra 19 (postfix-expression)


Estado 18

   22 primary-expression: constant .

    $padrão  reduzir usando a regra 22 (primary-expression)


Estado 19

   49 expression-statement: expression .

    $padrão  reduzir usando a regra 49 (expression-statement)


Estado 20

   17 assignment-expression: conditional-expression .

    $padrão  reduzir usando a regra 17 (assignment-expression)


Estado 21

   26 conditional-expression: inclusive-or-expression .
   28 inclusive-or-expression: inclusive-or-expression . OR and-expression

    OR  deslocar, e ir ao estado 44

    $padrão  reduzir usando a regra 26 (conditional-expression)


Estado 22

   27 inclusive-or-expression: and-expression .
   30 and-expression: and-expression . AND equality-expression

    AND  deslocar, e ir ao estado 45

    $padrão  reduzir usando a regra 27 (inclusive-or-expression)


Estado 23

   29 and-expression: equality-expression .
   32 equality-expression: equality-expression . CEQ relational-expression

    CEQ  deslocar, e ir ao estado 46

    $padrão  reduzir usando a regra 29 (and-expression)


Estado 24

   31 equality-expression: relational-expression .
   34 relational-expression: relational-expression . CLT additive-expression
   35                      | relational-expression . CGT additive-expression

    CLT  deslocar, e ir ao estado 47
    CGT  deslocar, e ir ao estado 48

    $padrão  reduzir usando a regra 31 (equality-expression)


Estado 25

   33 relational-expression: additive-expression .
   37 additive-expression: additive-expression . PLUS multiplicative-expression
   38                    | additive-expression . MINUS multiplicative-expression

    PLUS   deslocar, e ir ao estado 49
    MINUS  deslocar, e ir ao estado 50

    $padrão  reduzir usando a regra 33 (relational-expression)


Estado 26

   36 additive-expression: multiplicative-expression .
   40 multiplicative-expression: multiplicative-expression . MUL unary-expression
   41                          | multiplicative-expression . DIV unary-expression

    MUL  deslocar, e ir ao estado 51
    DIV  deslocar, e ir ao estado 52

    $padrão  reduzir usando a regra 36 (additive-expression)


Estado 27

    6 function-definition: compound-statement .
   45 statement: compound-statement .

    $end        reduzir usando a regra 6 (function-definition)
    $end        [reduzir usando a regra 45 (statement)]
    NUM         reduzir usando a regra 6 (function-definition)
    NUM         [reduzir usando a regra 45 (statement)]
    IDENTIFIER  reduzir usando a regra 6 (function-definition)
    IDENTIFIER  [reduzir usando a regra 45 (statement)]
    DOUBLE      reduzir usando a regra 6 (function-definition)
    DOUBLE      [reduzir usando a regra 45 (statement)]
    INTEGER     reduzir usando a regra 6 (function-definition)
    INTEGER     [reduzir usando a regra 45 (statement)]
    LPAREN      reduzir usando a regra 6 (function-definition)
    LPAREN      [reduzir usando a regra 45 (statement)]
    WHILE       reduzir usando a regra 6 (function-definition)
    WHILE       [reduzir usando a regra 45 (statement)]
    IF          reduzir usando a regra 6 (function-definition)
    IF          [reduzir usando a regra 45 (statement)]
    $padrão    reduzir usando a regra 6 (function-definition)


Estado 28

   43 compound-statement: statement .

    $padrão  reduzir usando a regra 43 (compound-statement)


Estado 29

   44 statement: expression-statement .

    $padrão  reduzir usando a regra 44 (statement)


Estado 30

   46 statement: selection-statement .

    $padrão  reduzir usando a regra 46 (statement)


Estado 31

   47 statement: iteration-statement .

    $padrão  reduzir usando a regra 47 (statement)


Estado 32

   23 primary-expression: LPAREN expression . RPAREN

    RPAREN  deslocar, e ir ao estado 53


Estado 33

   52 iteration-statement: WHILE LPAREN . expression RPAREN statement

    NUM         deslocar, e ir ao estado 1
    IDENTIFIER  deslocar, e ir ao estado 2
    LPAREN      deslocar, e ir ao estado 5

    assignment-expression      ir ao estado 14
    unary-expression           ir ao estado 15
    postfix-expression         ir ao estado 16
    primary-expression         ir ao estado 17
    constant                   ir ao estado 18
    expression                 ir ao estado 54
    conditional-expression     ir ao estado 20
    inclusive-or-expression    ir ao estado 21
    and-expression             ir ao estado 22
    equality-expression        ir ao estado 23
    relational-expression      ir ao estado 24
    additive-expression        ir ao estado 25
    multiplicative-expression  ir ao estado 26


Estado 34

   50 selection-statement: IF LPAREN . expression RPAREN statement
   51                    | IF LPAREN . expression RPAREN statement ELSE statement

    NUM         deslocar, e ir ao estado 1
    IDENTIFIER  deslocar, e ir ao estado 2
    LPAREN      deslocar, e ir ao estado 5

    assignment-expression      ir ao estado 14
    unary-expression           ir ao estado 15
    postfix-expression         ir ao estado 16
    primary-expression         ir ao estado 17
    constant                   ir ao estado 18
    expression                 ir ao estado 55
    conditional-expression     ir ao estado 20
    inclusive-or-expression    ir ao estado 21
    and-expression             ir ao estado 22
    equality-expression        ir ao estado 23
    relational-expression      ir ao estado 24
    additive-expression        ir ao estado 25
    multiplicative-expression  ir ao estado 26


Estado 35

    0 $accept: prog $end .

    $padrão  aceitar


Estado 36

    2 prog: external-declaration prog .

    $padrão  reduzir usando a regra 2 (prog)


Estado 37

   14 direct-declarator: IDENTIFIER .

    $padrão  reduzir usando a regra 14 (direct-declarator)


Estado 38

    7 declaration: declaration-specifier init-declarator .

    $padrão  reduzir usando a regra 7 (declaration)


Estado 39

    5 function-definition: declaration-specifier declarator . declaration compound-statement
   11 init-declarator: declarator .
   12                | declarator . EQUAL initializer

    DOUBLE   deslocar, e ir ao estado 3
    INTEGER  deslocar, e ir ao estado 4
    EQUAL    deslocar, e ir ao estado 56

    DOUBLE    [reduzir usando a regra 11 (init-declarator)]
    INTEGER   [reduzir usando a regra 11 (init-declarator)]
    $padrão  reduzir usando a regra 11 (init-declarator)

    declaration            ir ao estado 57
    declaration-specifier  ir ao estado 58
    type-specifier         ir ao estado 13


Estado 40

   13 declarator: direct-declarator .

    $padrão  reduzir usando a regra 13 (declarator)


Estado 41

   42 assignment-operator: EQUAL .

    $padrão  reduzir usando a regra 42 (assignment-operator)


Estado 42

   16 assignment-expression: unary-expression assignment-operator . assignment-expression

    NUM         deslocar, e ir ao estado 1
    IDENTIFIER  deslocar, e ir ao estado 2
    LPAREN      deslocar, e ir ao estado 5

    assignment-expression      ir ao estado 59
    unary-expression           ir ao estado 15
    postfix-expression         ir ao estado 16
    primary-expression         ir ao estado 17
    constant                   ir ao estado 18
    conditional-expression     ir ao estado 20
    inclusive-or-expression    ir ao estado 21
    and-expression             ir ao estado 22
    equality-expression        ir ao estado 23
    relational-expression      ir ao estado 24
    additive-expression        ir ao estado 25
    multiplicative-expression  ir ao estado 26


Estado 43

   20 postfix-expression: postfix-expression DOT . IDENTIFIER

    IDENTIFIER  deslocar, e ir ao estado 60


Estado 44

   28 inclusive-or-expression: inclusive-or-expression OR . and-expression

    NUM         deslocar, e ir ao estado 1
    IDENTIFIER  deslocar, e ir ao estado 2
    LPAREN      deslocar, e ir ao estado 5

    unary-expression           ir ao estado 61
    postfix-expression         ir ao estado 16
    primary-expression         ir ao estado 17
    constant                   ir ao estado 18
    and-expression             ir ao estado 62
    equality-expression        ir ao estado 23
    relational-expression      ir ao estado 24
    additive-expression        ir ao estado 25
    multiplicative-expression  ir ao estado 26


Estado 45

   30 and-expression: and-expression AND . equality-expression

    NUM         deslocar, e ir ao estado 1
    IDENTIFIER  deslocar, e ir ao estado 2
    LPAREN      deslocar, e ir ao estado 5

    unary-expression           ir ao estado 61
    postfix-expression         ir ao estado 16
    primary-expression         ir ao estado 17
    constant                   ir ao estado 18
    equality-expression        ir ao estado 63
    relational-expression      ir ao estado 24
    additive-expression        ir ao estado 25
    multiplicative-expression  ir ao estado 26


Estado 46

   32 equality-expression: equality-expression CEQ . relational-expression

    NUM         deslocar, e ir ao estado 1
    IDENTIFIER  deslocar, e ir ao estado 2
    LPAREN      deslocar, e ir ao estado 5

    unary-expression           ir ao estado 61
    postfix-expression         ir ao estado 16
    primary-expression         ir ao estado 17
    constant                   ir ao estado 18
    relational-expression      ir ao estado 64
    additive-expression        ir ao estado 25
    multiplicative-expression  ir ao estado 26


Estado 47

   34 relational-expression: relational-expression CLT . additive-expression

    NUM         deslocar, e ir ao estado 1
    IDENTIFIER  deslocar, e ir ao estado 2
    LPAREN      deslocar, e ir ao estado 5

    unary-expression           ir ao estado 61
    postfix-expression         ir ao estado 16
    primary-expression         ir ao estado 17
    constant                   ir ao estado 18
    additive-expression        ir ao estado 65
    multiplicative-expression  ir ao estado 26


Estado 48

   35 relational-expression: relational-expression CGT . additive-expression

    NUM         deslocar, e ir ao estado 1
    IDENTIFIER  deslocar, e ir ao estado 2
    LPAREN      deslocar, e ir ao estado 5

    unary-expression           ir ao estado 61
    postfix-expression         ir ao estado 16
    primary-expression         ir ao estado 17
    constant                   ir ao estado 18
    additive-expression        ir ao estado 66
    multiplicative-expression  ir ao estado 26


Estado 49

   37 additive-expression: additive-expression PLUS . multiplicative-expression

    NUM         deslocar, e ir ao estado 1
    IDENTIFIER  deslocar, e ir ao estado 2
    LPAREN      deslocar, e ir ao estado 5

    unary-expression           ir ao estado 61
    postfix-expression         ir ao estado 16
    primary-expression         ir ao estado 17
    constant                   ir ao estado 18
    multiplicative-expression  ir ao estado 67


Estado 50

   38 additive-expression: additive-expression MINUS . multiplicative-expression

    NUM         deslocar, e ir ao estado 1
    IDENTIFIER  deslocar, e ir ao estado 2
    LPAREN      deslocar, e ir ao estado 5

    unary-expression           ir ao estado 61
    postfix-expression         ir ao estado 16
    primary-expression         ir ao estado 17
    constant                   ir ao estado 18
    multiplicative-expression  ir ao estado 68


Estado 51

   40 multiplicative-expression: multiplicative-expression MUL . unary-expression

    NUM         deslocar, e ir ao estado 1
    IDENTIFIER  deslocar, e ir ao estado 2
    LPAREN      deslocar, e ir ao estado 5

    unary-expression    ir ao estado 69
    postfix-expression  ir ao estado 16
    primary-expression  ir ao estado 17
    constant            ir ao estado 18


Estado 52

   41 multiplicative-expression: multiplicative-expression DIV . unary-expression

    NUM         deslocar, e ir ao estado 1
    IDENTIFIER  deslocar, e ir ao estado 2
    LPAREN      deslocar, e ir ao estado 5

    unary-expression    ir ao estado 70
    postfix-expression  ir ao estado 16
    primary-expression  ir ao estado 17
    constant            ir ao estado 18


Estado 53

   23 primary-expression: LPAREN expression RPAREN .

    $padrão  reduzir usando a regra 23 (primary-expression)


Estado 54

   52 iteration-statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  deslocar, e ir ao estado 71


Estado 55

   50 selection-statement: IF LPAREN expression . RPAREN statement
   51                    | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  deslocar, e ir ao estado 72


Estado 56

   12 init-declarator: declarator EQUAL . initializer

    NUM         deslocar, e ir ao estado 1
    IDENTIFIER  deslocar, e ir ao estado 2
    LPAREN      deslocar, e ir ao estado 5

    initializer                ir ao estado 73
    assignment-expression      ir ao estado 74
    unary-expression           ir ao estado 15
    postfix-expression         ir ao estado 16
    primary-expression         ir ao estado 17
    constant                   ir ao estado 18
    conditional-expression     ir ao estado 20
    inclusive-or-expression    ir ao estado 21
    and-expression             ir ao estado 22
    equality-expression        ir ao estado 23
    relational-expression      ir ao estado 24
    additive-expression        ir ao estado 25
    multiplicative-expression  ir ao estado 26


Estado 57

    5 function-definition: declaration-specifier declarator declaration . compound-statement

    NUM         deslocar, e ir ao estado 1
    IDENTIFIER  deslocar, e ir ao estado 2
    LPAREN      deslocar, e ir ao estado 5
    WHILE       deslocar, e ir ao estado 6
    IF          deslocar, e ir ao estado 7

    NUM         [reduzir usando a regra 48 (expression-statement)]
    IDENTIFIER  [reduzir usando a regra 48 (expression-statement)]
    LPAREN      [reduzir usando a regra 48 (expression-statement)]
    WHILE       [reduzir usando a regra 48 (expression-statement)]
    IF          [reduzir usando a regra 48 (expression-statement)]
    $padrão    reduzir usando a regra 48 (expression-statement)

    assignment-expression      ir ao estado 14
    unary-expression           ir ao estado 15
    postfix-expression         ir ao estado 16
    primary-expression         ir ao estado 17
    constant                   ir ao estado 18
    expression                 ir ao estado 19
    conditional-expression     ir ao estado 20
    inclusive-or-expression    ir ao estado 21
    and-expression             ir ao estado 22
    equality-expression        ir ao estado 23
    relational-expression      ir ao estado 24
    additive-expression        ir ao estado 25
    multiplicative-expression  ir ao estado 26
    compound-statement         ir ao estado 75
    statement                  ir ao estado 28
    expression-statement       ir ao estado 29
    selection-statement        ir ao estado 30
    iteration-statement        ir ao estado 31


Estado 58

    7 declaration: declaration-specifier . init-declarator

    IDENTIFIER  deslocar, e ir ao estado 37

    init-declarator    ir ao estado 38
    declarator         ir ao estado 76
    direct-declarator  ir ao estado 40


Estado 59

   16 assignment-expression: unary-expression assignment-operator assignment-expression .

    $padrão  reduzir usando a regra 16 (assignment-expression)


Estado 60

   20 postfix-expression: postfix-expression DOT IDENTIFIER .

    $padrão  reduzir usando a regra 20 (postfix-expression)


Estado 61

   39 multiplicative-expression: unary-expression .

    $padrão  reduzir usando a regra 39 (multiplicative-expression)


Estado 62

   28 inclusive-or-expression: inclusive-or-expression OR and-expression .
   30 and-expression: and-expression . AND equality-expression

    AND  deslocar, e ir ao estado 45

    $padrão  reduzir usando a regra 28 (inclusive-or-expression)


Estado 63

   30 and-expression: and-expression AND equality-expression .
   32 equality-expression: equality-expression . CEQ relational-expression

    CEQ  deslocar, e ir ao estado 46

    $padrão  reduzir usando a regra 30 (and-expression)


Estado 64

   32 equality-expression: equality-expression CEQ relational-expression .
   34 relational-expression: relational-expression . CLT additive-expression
   35                      | relational-expression . CGT additive-expression

    CLT  deslocar, e ir ao estado 47
    CGT  deslocar, e ir ao estado 48

    $padrão  reduzir usando a regra 32 (equality-expression)


Estado 65

   34 relational-expression: relational-expression CLT additive-expression .
   37 additive-expression: additive-expression . PLUS multiplicative-expression
   38                    | additive-expression . MINUS multiplicative-expression

    PLUS   deslocar, e ir ao estado 49
    MINUS  deslocar, e ir ao estado 50

    $padrão  reduzir usando a regra 34 (relational-expression)


Estado 66

   35 relational-expression: relational-expression CGT additive-expression .
   37 additive-expression: additive-expression . PLUS multiplicative-expression
   38                    | additive-expression . MINUS multiplicative-expression

    PLUS   deslocar, e ir ao estado 49
    MINUS  deslocar, e ir ao estado 50

    $padrão  reduzir usando a regra 35 (relational-expression)


Estado 67

   37 additive-expression: additive-expression PLUS multiplicative-expression .
   40 multiplicative-expression: multiplicative-expression . MUL unary-expression
   41                          | multiplicative-expression . DIV unary-expression

    MUL  deslocar, e ir ao estado 51
    DIV  deslocar, e ir ao estado 52

    $padrão  reduzir usando a regra 37 (additive-expression)


Estado 68

   38 additive-expression: additive-expression MINUS multiplicative-expression .
   40 multiplicative-expression: multiplicative-expression . MUL unary-expression
   41                          | multiplicative-expression . DIV unary-expression

    MUL  deslocar, e ir ao estado 51
    DIV  deslocar, e ir ao estado 52

    $padrão  reduzir usando a regra 38 (additive-expression)


Estado 69

   40 multiplicative-expression: multiplicative-expression MUL unary-expression .

    $padrão  reduzir usando a regra 40 (multiplicative-expression)


Estado 70

   41 multiplicative-expression: multiplicative-expression DIV unary-expression .

    $padrão  reduzir usando a regra 41 (multiplicative-expression)


Estado 71

   52 iteration-statement: WHILE LPAREN expression RPAREN . statement

    NUM         deslocar, e ir ao estado 1
    IDENTIFIER  deslocar, e ir ao estado 2
    LPAREN      deslocar, e ir ao estado 5
    WHILE       deslocar, e ir ao estado 6
    IF          deslocar, e ir ao estado 7

    NUM         [reduzir usando a regra 48 (expression-statement)]
    IDENTIFIER  [reduzir usando a regra 48 (expression-statement)]
    LPAREN      [reduzir usando a regra 48 (expression-statement)]
    WHILE       [reduzir usando a regra 48 (expression-statement)]
    IF          [reduzir usando a regra 48 (expression-statement)]
    $padrão    reduzir usando a regra 48 (expression-statement)

    assignment-expression      ir ao estado 14
    unary-expression           ir ao estado 15
    postfix-expression         ir ao estado 16
    primary-expression         ir ao estado 17
    constant                   ir ao estado 18
    expression                 ir ao estado 19
    conditional-expression     ir ao estado 20
    inclusive-or-expression    ir ao estado 21
    and-expression             ir ao estado 22
    equality-expression        ir ao estado 23
    relational-expression      ir ao estado 24
    additive-expression        ir ao estado 25
    multiplicative-expression  ir ao estado 26
    compound-statement         ir ao estado 77
    statement                  ir ao estado 78
    expression-statement       ir ao estado 29
    selection-statement        ir ao estado 30
    iteration-statement        ir ao estado 31


Estado 72

   50 selection-statement: IF LPAREN expression RPAREN . statement
   51                    | IF LPAREN expression RPAREN . statement ELSE statement

    NUM         deslocar, e ir ao estado 1
    IDENTIFIER  deslocar, e ir ao estado 2
    LPAREN      deslocar, e ir ao estado 5
    WHILE       deslocar, e ir ao estado 6
    IF          deslocar, e ir ao estado 7

    NUM         [reduzir usando a regra 48 (expression-statement)]
    IDENTIFIER  [reduzir usando a regra 48 (expression-statement)]
    LPAREN      [reduzir usando a regra 48 (expression-statement)]
    WHILE       [reduzir usando a regra 48 (expression-statement)]
    IF          [reduzir usando a regra 48 (expression-statement)]
    $padrão    reduzir usando a regra 48 (expression-statement)

    assignment-expression      ir ao estado 14
    unary-expression           ir ao estado 15
    postfix-expression         ir ao estado 16
    primary-expression         ir ao estado 17
    constant                   ir ao estado 18
    expression                 ir ao estado 19
    conditional-expression     ir ao estado 20
    inclusive-or-expression    ir ao estado 21
    and-expression             ir ao estado 22
    equality-expression        ir ao estado 23
    relational-expression      ir ao estado 24
    additive-expression        ir ao estado 25
    multiplicative-expression  ir ao estado 26
    compound-statement         ir ao estado 77
    statement                  ir ao estado 79
    expression-statement       ir ao estado 29
    selection-statement        ir ao estado 30
    iteration-statement        ir ao estado 31


Estado 73

   12 init-declarator: declarator EQUAL initializer .

    $padrão  reduzir usando a regra 12 (init-declarator)


Estado 74

   15 initializer: assignment-expression .

    $padrão  reduzir usando a regra 15 (initializer)


Estado 75

    5 function-definition: declaration-specifier declarator declaration compound-statement .
   45 statement: compound-statement .

    $end        reduzir usando a regra 5 (function-definition)
    $end        [reduzir usando a regra 45 (statement)]
    NUM         reduzir usando a regra 5 (function-definition)
    NUM         [reduzir usando a regra 45 (statement)]
    IDENTIFIER  reduzir usando a regra 5 (function-definition)
    IDENTIFIER  [reduzir usando a regra 45 (statement)]
    DOUBLE      reduzir usando a regra 5 (function-definition)
    DOUBLE      [reduzir usando a regra 45 (statement)]
    INTEGER     reduzir usando a regra 5 (function-definition)
    INTEGER     [reduzir usando a regra 45 (statement)]
    LPAREN      reduzir usando a regra 5 (function-definition)
    LPAREN      [reduzir usando a regra 45 (statement)]
    WHILE       reduzir usando a regra 5 (function-definition)
    WHILE       [reduzir usando a regra 45 (statement)]
    IF          reduzir usando a regra 5 (function-definition)
    IF          [reduzir usando a regra 45 (statement)]
    $padrão    reduzir usando a regra 5 (function-definition)


Estado 76

   11 init-declarator: declarator .
   12                | declarator . EQUAL initializer

    EQUAL  deslocar, e ir ao estado 56

    $padrão  reduzir usando a regra 11 (init-declarator)


Estado 77

   45 statement: compound-statement .

    $padrão  reduzir usando a regra 45 (statement)


Estado 78

   43 compound-statement: statement .
   52 iteration-statement: WHILE LPAREN expression RPAREN statement .

    $end        reduzir usando a regra 43 (compound-statement)
    $end        [reduzir usando a regra 52 (iteration-statement)]
    NUM         reduzir usando a regra 43 (compound-statement)
    NUM         [reduzir usando a regra 52 (iteration-statement)]
    IDENTIFIER  reduzir usando a regra 43 (compound-statement)
    IDENTIFIER  [reduzir usando a regra 52 (iteration-statement)]
    DOUBLE      reduzir usando a regra 43 (compound-statement)
    DOUBLE      [reduzir usando a regra 52 (iteration-statement)]
    INTEGER     reduzir usando a regra 43 (compound-statement)
    INTEGER     [reduzir usando a regra 52 (iteration-statement)]
    LPAREN      reduzir usando a regra 43 (compound-statement)
    LPAREN      [reduzir usando a regra 52 (iteration-statement)]
    WHILE       reduzir usando a regra 43 (compound-statement)
    WHILE       [reduzir usando a regra 52 (iteration-statement)]
    IF          reduzir usando a regra 43 (compound-statement)
    IF          [reduzir usando a regra 52 (iteration-statement)]
    ELSE        reduzir usando a regra 43 (compound-statement)
    ELSE        [reduzir usando a regra 52 (iteration-statement)]
    $padrão    reduzir usando a regra 43 (compound-statement)


Estado 79

   43 compound-statement: statement .
   50 selection-statement: IF LPAREN expression RPAREN statement .
   51                    | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  deslocar, e ir ao estado 80

    $end        reduzir usando a regra 43 (compound-statement)
    $end        [reduzir usando a regra 50 (selection-statement)]
    NUM         reduzir usando a regra 43 (compound-statement)
    NUM         [reduzir usando a regra 50 (selection-statement)]
    IDENTIFIER  reduzir usando a regra 43 (compound-statement)
    IDENTIFIER  [reduzir usando a regra 50 (selection-statement)]
    DOUBLE      reduzir usando a regra 43 (compound-statement)
    DOUBLE      [reduzir usando a regra 50 (selection-statement)]
    INTEGER     reduzir usando a regra 43 (compound-statement)
    INTEGER     [reduzir usando a regra 50 (selection-statement)]
    LPAREN      reduzir usando a regra 43 (compound-statement)
    LPAREN      [reduzir usando a regra 50 (selection-statement)]
    WHILE       reduzir usando a regra 43 (compound-statement)
    WHILE       [reduzir usando a regra 50 (selection-statement)]
    IF          reduzir usando a regra 43 (compound-statement)
    IF          [reduzir usando a regra 50 (selection-statement)]
    ELSE        [reduzir usando a regra 43 (compound-statement)]
    ELSE        [reduzir usando a regra 50 (selection-statement)]
    $padrão    reduzir usando a regra 43 (compound-statement)


Estado 80

   51 selection-statement: IF LPAREN expression RPAREN statement ELSE . statement

    NUM         deslocar, e ir ao estado 1
    IDENTIFIER  deslocar, e ir ao estado 2
    LPAREN      deslocar, e ir ao estado 5
    WHILE       deslocar, e ir ao estado 6
    IF          deslocar, e ir ao estado 7

    NUM         [reduzir usando a regra 48 (expression-statement)]
    IDENTIFIER  [reduzir usando a regra 48 (expression-statement)]
    LPAREN      [reduzir usando a regra 48 (expression-statement)]
    WHILE       [reduzir usando a regra 48 (expression-statement)]
    IF          [reduzir usando a regra 48 (expression-statement)]
    $padrão    reduzir usando a regra 48 (expression-statement)

    assignment-expression      ir ao estado 14
    unary-expression           ir ao estado 15
    postfix-expression         ir ao estado 16
    primary-expression         ir ao estado 17
    constant                   ir ao estado 18
    expression                 ir ao estado 19
    conditional-expression     ir ao estado 20
    inclusive-or-expression    ir ao estado 21
    and-expression             ir ao estado 22
    equality-expression        ir ao estado 23
    relational-expression      ir ao estado 24
    additive-expression        ir ao estado 25
    multiplicative-expression  ir ao estado 26
    compound-statement         ir ao estado 77
    statement                  ir ao estado 81
    expression-statement       ir ao estado 29
    selection-statement        ir ao estado 30
    iteration-statement        ir ao estado 31


Estado 81

   43 compound-statement: statement .
   51 selection-statement: IF LPAREN expression RPAREN statement ELSE statement .

    $end        reduzir usando a regra 43 (compound-statement)
    $end        [reduzir usando a regra 51 (selection-statement)]
    NUM         reduzir usando a regra 43 (compound-statement)
    NUM         [reduzir usando a regra 51 (selection-statement)]
    IDENTIFIER  reduzir usando a regra 43 (compound-statement)
    IDENTIFIER  [reduzir usando a regra 51 (selection-statement)]
    DOUBLE      reduzir usando a regra 43 (compound-statement)
    DOUBLE      [reduzir usando a regra 51 (selection-statement)]
    INTEGER     reduzir usando a regra 43 (compound-statement)
    INTEGER     [reduzir usando a regra 51 (selection-statement)]
    LPAREN      reduzir usando a regra 43 (compound-statement)
    LPAREN      [reduzir usando a regra 51 (selection-statement)]
    WHILE       reduzir usando a regra 43 (compound-statement)
    WHILE       [reduzir usando a regra 51 (selection-statement)]
    IF          reduzir usando a regra 43 (compound-statement)
    IF          [reduzir usando a regra 51 (selection-statement)]
    ELSE        reduzir usando a regra 43 (compound-statement)
    ELSE        [reduzir usando a regra 51 (selection-statement)]
    $padrão    reduzir usando a regra 43 (compound-statement)
